YOU KNOW HOW TO READ IT. (BS6-CNV-2020)
-------------------Function For SKU Wise Avg Price-------------------
USE [PPIC_Final15Mar2020]
GO
/****** Object:  UserDefinedFunction [dbo].[GetReportSignatory]    Script Date: 3/16/2020 12:27:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[GetSKUWiseAvgPrice] 
(	
	@PARAMSKUID INT
)
RETURNS @VALUE_TABLE TABLE (
	SKUID INT ,
	Trandate DATE,
	DailyAVGPrice Decimal(18,4),
	LASTAVGPrice Decimal(18,4)
) AS
BEGIN
	DECLARE @PREVSKUID int;   
    DECLARE @SKUID int;    
    DECLARE @Trandate DATE;
    DECLARE @DailyAVGPrice Decimal(18,4);
    DECLARE @CumulativeTotal Decimal(18,4);

    SET @CumulativeTotal=NULL;  
    SET @PREVSKUID=NULL;  

	DECLARE stockTran_cursor CURSOR FOR     
	Select SKUID,Trandate, 
			DailyAVGPrice=SUM(TranValue)/ (CASE WHEN SUM(Quantity)>0 THEN  SUM(Quantity) ELSE 1 END)
	FROM
	(Select SKUID,Trandate=CAST(Trandate AS DATE),Quantity=ISNULL(Quantity,0),RateInBDT,TranValue=ISNULL(Quantity,0)*ISNULL(RateInBDT,0) 
		FROM StockTranItems Where TransactionTypeID IN (1,19,23)--(1,19,23) 
		AND TranSide=1 
		AND SKUID IN (@PARAMSKUID)
    ) T
	Group by SKUID,Trandate
	ORDER BY SKUID,Trandate;   
  
OPEN stockTran_cursor    
  
FETCH NEXT FROM stockTran_cursor     
INTO @SKUID,@Trandate,@DailyAVGPrice   

IF @PREVSKUID>0 
	BEGIN  
	 IF @SKUID<>@PREVSKUID
	    BEGIN  
			SET @CumulativeTotal=NULL;
		END
	END

  
WHILE @@FETCH_STATUS = 0    
BEGIN    
    
	IF @CumulativeTotal IS NULL
		BEGIN 		    
			SET @CumulativeTotal=@DailyAVGPrice;
			INSERT INTO @VALUE_TABLE(SKUID, Trandate,DailyAVGPrice,LASTAVGPrice)
			VALUES (@SKUID,@Trandate,@DailyAVGPrice,@CumulativeTotal);
			
			SET @PREVSKUID=@SKUID;
		END
	ELSE
		BEGIN 
			SET @CumulativeTotal=(@CumulativeTotal+@DailyAVGPrice)/2;
			INSERT INTO @VALUE_TABLE(SKUID, Trandate,DailyAVGPrice,LASTAVGPrice)
			VALUES (@SKUID,@Trandate,@DailyAVGPrice,@CumulativeTotal);

			SET @PREVSKUID=@SKUID;
		END

    FETCH NEXT FROM stockTran_cursor     
    INTO @SKUID,@Trandate,@DailyAVGPrice   
    
	IF @PREVSKUID>0 
	BEGIN  
	 IF @SKUID<>@PREVSKUID
	    BEGIN  
			SET @CumulativeTotal=NULL;
		END
	END

END     
CLOSE stockTran_cursor;    
DEALLOCATE stockTran_cursor;

	RETURN;
END
-------------------Function For SKU Wise Avg Price-------------------

---------------------------------------------------------If Stock Tran Item RateInBDT is Not Updated---------------------------------------------------------
USE [PPIC_Final15Mar2020]

SELECT * FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1
Where sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)


Select * from TransactionItem ti WHere  ReferenceTypeID=4

Select TransactionItemID,ParentID,QPOI.* from TransactionItem ti -- ReferenceTypeID:4(QTN)
LEFT JOIN

(Select ItemID QRSTDItemID,qri.QSTRID,qri.SKUID,qri.RefID,qri.RefItemID,qr.PurchaseTypeID,poi.Rate,poi.POActualRate from QuarantineStockReceiptItem qri
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=qri.QSTRID AND qr.PurchaseTypeID=0
LEFT JOIN POItem poi ON poi.POID=qri.RefID AND poi.POItemID=qri.RefItemID) QPOI 
ON  ti.ReferenceID=QPOI.QSTRID AND ti.ReferenceItemID=QPOI.QRSTDItemID  AND ti.SKUID=QPOI.SKUID AND ReferenceTypeID=4


--PO AND QUarantine
Select ItemID QRSTDItemID,qri.QSTRID,qri.SKUID,qri.RefID,qri.RefItemID,qr.PurchaseTypeID,poi.Rate,poi.POActualRate from QuarantineStockReceiptItem qri
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=qri.QSTRID AND qr.PurchaseTypeID=0
LEFT JOIN POItem poi ON poi.POID=qri.RefID AND poi.POItemID=qri.RefItemID

--35657
SELECT ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,ti.ReferenceTypeID,sti.StockTranItemID,sti.RateInBDT FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1
INNER JOIN [Transaction] tt On tt.TransactionID=sti.ParentTranID and tt.TransactionStatus=3
INNER JOIN TransactionItem ti ON sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4

Where sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)


SELECT ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,ti.ReferenceTypeID,sti.StockTranItemID,sti.Trandate,sti.RateInBDT,QPOI.Rate,QPOI.POActualRate 
FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1 AND sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)
INNER JOIN TransactionItem ti ON sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4

LEFT JOIN (Select ItemID QRSTDItemID,qri.QSTRID,qri.SKUID,qri.RefID,qri.RefItemID,qr.PurchaseTypeID,poi.Rate,poi.POActualRate from QuarantineStockReceiptItem qri
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=qri.QSTRID AND qr.PurchaseTypeID=0
LEFT JOIN POItem poi ON poi.POID=qri.RefID AND poi.POItemID=qri.RefItemID) QPOI 
ON  ti.ReferenceID=QPOI.QSTRID AND ti.ReferenceItemID=QPOI.QRSTDItemID  AND ti.SKUID=QPOI.SKUID AND ReferenceTypeID=4
Where sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)


Select StockTranItemID FROM 
(SELECT ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,ti.ReferenceTypeID,sti.StockTranItemID,sti.Trandate,sti.RateInBDT,QPOI.Rate,QPOI.POActualRate 
FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1 AND sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)
INNER JOIN TransactionItem ti ON sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4

LEFT JOIN (Select ItemID QRSTDItemID,qri.QSTRID,qri.SKUID,qri.RefID,qri.RefItemID,qr.PurchaseTypeID,poi.Rate,poi.POActualRate from QuarantineStockReceiptItem qri
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=qri.QSTRID AND qr.PurchaseTypeID=0
LEFT JOIN POItem poi ON poi.POID=qri.RefID AND poi.POItemID=qri.RefItemID) QPOI 
ON  ti.ReferenceID=QPOI.QSTRID AND ti.ReferenceItemID=QPOI.QRSTDItemID  AND ti.SKUID=QPOI.SKUID AND ReferenceTypeID=4
Where sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0) 
) T Where Rate IS NULL


Select * FROM 
(SELECT POItemID,ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,ti.ReferenceTypeID,sti.StockTranItemID,sti.Trandate,sti.RateInBDT,QPOI.Rate,QPOI.POActualRate 
FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1 AND sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)
INNER JOIN TransactionItem ti ON sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4

LEFT JOIN (Select poi.POItemID,ItemID QRSTDItemID,qri.QSTRID,qri.SKUID,qri.RefID,qri.RefItemID,qr.PurchaseTypeID,poi.Rate,poi.POActualRate from QuarantineStockReceiptItem qri
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=qri.QSTRID AND qr.PurchaseTypeID=0
LEFT JOIN POItem poi ON poi.POID=qri.RefID AND poi.POItemID=qri.RefItemID) QPOI 
ON  ti.ReferenceID=QPOI.QSTRID AND ti.ReferenceItemID=QPOI.QRSTDItemID  AND ti.SKUID=QPOI.SKUID AND ReferenceTypeID=4
Where sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0) 
) T Where T.Rate IS NOT NULL


SELECT ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,ti.ReferenceTypeID,sti.StockTranItemID,sti.RateInBDT 
FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1
INNER JOIN [Transaction] tt On tt.TransactionID=sti.ParentTranID and tt.TransactionStatus=3
INNER JOIN TransactionItem ti ON sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=ti.ReferenceID AND qr.PurchaseTypeID=0
INNER JOIN QuarantineStockReceiptItem qri ON  qr.QSTRID=qri.QSTRID AND ti.ReferenceID=qri.QSTRID AND ti.ReferenceItemID=qri.ItemID AND ti.SKUID=qri.SKUID
Where sti.TransactionTypeID IN (1) AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)

Select * from QuarantineStockReceiptItem


Select * from StockTranItems
Where StockTranItemID IN
(
Select StockTranItemID FROM 
(SELECT ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,ti.ReferenceTypeID,sti.StockTranItemID,sti.Trandate,sti.RateInBDT,QPOI.Rate,QPOI.POActualRate 
FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1 AND sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)
INNER JOIN TransactionItem ti ON sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4

LEFT JOIN (Select ItemID QRSTDItemID,qri.QSTRID,qri.SKUID,qri.RefID,qri.RefItemID,qr.PurchaseTypeID,poi.Rate,poi.POActualRate from QuarantineStockReceiptItem qri
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=qri.QSTRID AND qr.PurchaseTypeID=0
LEFT JOIN POItem poi ON poi.POID=qri.RefID AND poi.POItemID=qri.RefItemID) QPOI 
ON  ti.ReferenceID=QPOI.QSTRID AND ti.ReferenceItemID=QPOI.QRSTDItemID  AND ti.SKUID=QPOI.SKUID AND ReferenceTypeID=4
Where sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0) 
) T Where T.Rate IS NOT NULL
)


Select * from TransactionItem Where TransactionItemID=70832
Select * from [Transaction] Where TransactionID= 28650

Select * from QuarantineStockReceiptItem Where ItemID=37570
Select * from QuarantineStockReceipt Where QSTRID=17623

Select * from POItem Where POItemID=3434
Select * from LCSKUItems Where LCItemsID=3434



Select * FROM 
(SELECT POItemID,ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,ti.ReferenceTypeID,sti.StockTranItemID,sti.Trandate,sti.RateInBDT,QPOI.Rate,QPOI.POActualRate 
FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1 AND sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)
INNER JOIN [Transaction] tn ON sti.ParentTranID=tn.TransactionID AND tn.TransactionReferenceTypeID=4
INNER JOIN TransactionItem ti ON tn.TransactionID=ti.ParentID AND sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4

LEFT JOIN (Select poi.POItemID,ItemID QRSTDItemID,qri.QSTRID,qri.SKUID,qri.RefID,qri.RefItemID,qr.PurchaseTypeID,poi.Rate,poi.POActualRate from QuarantineStockReceiptItem qri
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=qri.QSTRID AND qr.PurchaseTypeID=0
LEFT JOIN POItem poi ON poi.POID=qri.RefID AND poi.POItemID=qri.RefItemID) QPOI 
ON  ti.ReferenceID=QPOI.QSTRID AND ti.ReferenceItemID=QPOI.QRSTDItemID  AND ti.SKUID=QPOI.SKUID AND ReferenceTypeID=4
Where sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0) 
) T Where T.Rate IS NOT NULL



SELECT --POItemID,
 ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,ti.ReferenceTypeID,sti.StockTranItemID,sti.RateInBDT
--,QPOI.Rate,QPOI.POActualRate 
FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1 AND sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)
INNER JOIN [Transaction] tn ON sti.ParentTranID=tn.TransactionID AND tn.TransactionReferenceTypeID=4
INNER JOIN TransactionItem ti ON tn.TransactionID=ti.ParentID AND sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4


--- FOR PO
Select * FROM 
(SELECT ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,PurchaseTypeID,ti.ReferenceTypeID,sti.StockTranItemID,sti.Trandate,sti.RateInBDT,QPOI.Rate,QPOI.POActualRate 
FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1 AND sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)
INNER JOIN TransactionItem ti ON sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4
LEFT JOIN (Select ItemID QRSTDItemID,qri.QSTRID,qri.SKUID,qri.RefID,qri.RefItemID,qr.PurchaseTypeID,poi.Rate,poi.POActualRate from QuarantineStockReceiptItem qri
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=qri.QSTRID AND qr.PurchaseTypeID=0
LEFT JOIN POItem poi ON poi.POID=qri.RefID AND poi.POItemID=qri.RefItemID) QPOI 
ON  ti.ReferenceID=QPOI.QSTRID AND ti.ReferenceItemID=QPOI.QRSTDItemID  AND ti.SKUID=QPOI.SKUID AND ReferenceTypeID=4
Where sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0) 
) T Where T.Rate IS NOT NULL


-- FOR LC
Select * FROM 
(SELECT ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,PurchaseTypeID,ti.ReferenceTypeID,sti.StockTranItemID,sti.Trandate,sti.RateInBDT,QPOI.Rate--,QPOI.POActualRate 
FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1 AND sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)
INNER JOIN TransactionItem ti ON sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4
LEFT JOIN (Select ItemID QRSTDItemID,qri.QSTRID,qri.SKUID,qri.RefID,qri.RefItemID,qr.PurchaseTypeID,poi.Rate from QuarantineStockReceiptItem qri
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=qri.QSTRID AND qr.PurchaseTypeID=1
LEFT JOIN LCSKUItems poi ON poi.LCID=qri.RefID AND poi.LCItemsID=qri.RefItemID) QPOI 
ON  ti.ReferenceID=QPOI.QSTRID AND ti.ReferenceItemID=QPOI.QRSTDItemID  AND ti.SKUID=QPOI.SKUID AND ReferenceTypeID=4
Where sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0) 
) T Where T.Rate IS NOT NULL


-- FOR SPO
Select * FROM 
(SELECT ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,PurchaseTypeID,ti.ReferenceTypeID,sti.StockTranItemID,sti.Trandate,sti.RateInBDT,QPOI.Rate--,QPOI.POActualRate 
FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1 AND sti.TransactionTypeID IN (1)  AND sti.TranSide=1-- AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)
INNER JOIN TransactionItem ti ON sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4
LEFT JOIN (Select ItemID QRSTDItemID,qri.QSTRID,qri.SKUID,qri.RefID,qri.RefItemID,qr.PurchaseTypeID,poi.Rate from QuarantineStockReceiptItem qri
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=qri.QSTRID AND qr.PurchaseTypeID=2
LEFT JOIN SPOItem poi ON poi.SPOID=qri.RefID AND poi.SPOItemID=qri.RefItemID) QPOI 
ON  ti.ReferenceID=QPOI.QSTRID AND ti.ReferenceItemID=QPOI.QRSTDItemID  AND ti.SKUID=QPOI.SKUID AND ReferenceTypeID=4
Where sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0) 
) T Where T.Rate IS NOT NULL



UPDATE StockTranItems 
  SET RateInBDT= U.RATE
FROM (
Select * FROM 
(SELECT ti.TransactionItemID,ti.ParentID,ti.ReferenceID,ti.ReferenceItemID,ti.SKUID,PurchaseTypeID,ti.ReferenceTypeID,sti.StockTranItemID,sti.Trandate,sti.RateInBDT,QPOI.Rate,QPOI.POActualRate 
FROM StockTranItems sti 
INNER JOIN Stocks stc ON stc.StockID=sti.StockID AND StockType=1 AND sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0)
INNER JOIN TransactionItem ti ON sti.ParentLineItemID=ti.TransactionItemID AND sti.ParentTranID=ti.ParentID AND sti.SKUID=ti.SKUID AND ti.ReferenceTypeID=4
LEFT JOIN (Select ItemID QRSTDItemID,qri.QSTRID,qri.SKUID,qri.RefID,qri.RefItemID,qr.PurchaseTypeID,poi.Rate,poi.POActualRate from QuarantineStockReceiptItem qri
INNER JOIN QuarantineStockReceipt qr ON qr.QSTRID=qri.QSTRID AND qr.PurchaseTypeID=0
LEFT JOIN POItem poi ON poi.POID=qri.RefID AND poi.POItemID=qri.RefItemID) QPOI 
ON  ti.ReferenceID=QPOI.QSTRID AND ti.ReferenceItemID=QPOI.QRSTDItemID  AND ti.SKUID=QPOI.SKUID AND ReferenceTypeID=4
Where sti.TransactionTypeID IN (1)  AND sti.TranSide=1 AND (sti.RateInBDT IS NULL OR sti.RateInBDT=0) 
) T Where T.Rate IS NOT NULL
) U 

WHERE U.StockTranItemID=StockTranItems.StockTranItemID AND StockTranItems.RateInBDT=0

---------------------------------------------------------If Stock Tran Item RateInBDT is Not Updated----------------------------------------------------------------------------

--------------------------------------------Procedure to Daily Update stock Avg Price------------------------------------------------
USE [Energypac_Dev]
GO
/****** Object:  StoredProcedure [dbo].[UpdateDailyStockAveragePrice]    Script Date: 3/18/2020 9:19:43 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [dbo].[UpdateDailyStockAveragePrice]
   @FORSKUID INT,
   @FORTranDate DATE
AS

DECLARE @tableAVG TABLE
(SKUID INT , Trandate DATE, DailyAVGPrice Decimal(18,4), CumulativeAVGPrice Decimal(18,4));

SET NOCOUNT ON;    
DECLARE @PREVSKUID int;   
DECLARE @SKUID int;    
DECLARE @Trandate DATE;
DECLARE @DailyAVGPrice Decimal(18,4);
DECLARE @CumulativeTotal Decimal(18,4);
DECLARE @FinalCumulativeTotal Decimal(18,4);

SET @CumulativeTotal=NULL;  
SET @PREVSKUID=NULL;  

DECLARE stockTran_cursor CURSOR FOR     
Select SKUID,Trandate, 
  DailyAVGPrice=SUM(TranValue)/ (CASE WHEN SUM(Quantity)>0 THEN  SUM(Quantity) ELSE 1 END)
FROM
(Select SKUID,Trandate=CAST(Trandate AS DATE),Quantity=ISNULL(Quantity,0),RateInBDT,TranValue=ISNULL(Quantity,0)*ISNULL(RateInBDT,0) 
FROM StockTranItems Where TransactionTypeID IN (1,19,23)  --CHECK SYSTEM CONSTANTs 
AND TranSide=1  --Only Count Stock Receive
AND SKUID=@FORSKUID
AND CAST(Trandate AS DATE)>=CAST(@FORTranDate AS DATE)
) T
Group by SKUID,Trandate
ORDER BY SKUID,Trandate;   
  
OPEN stockTran_cursor    
  
FETCH NEXT FROM stockTran_cursor     
INTO @SKUID,@Trandate,@DailyAVGPrice   


IF @PREVSKUID>0 
	BEGIN  
	 IF @SKUID<>@PREVSKUID
	    BEGIN  
			SET @CumulativeTotal=NULL;
		END
	END


SET @CumulativeTotal=(Select top 1 DayEndAVGPrice from DailyStockAveragePrice
WHERE CAST(Trandate AS DATE)<CAST(@FORTranDate AS DATE) AND SKUID=@FORSKUID ORDER BY Trandate DESC);

DELETE FROM DailyStockAveragePrice WHERE CAST(Trandate AS DATE)>=CAST(@FORTranDate AS DATE) AND SKUID=@FORSKUID;
  
WHILE @@FETCH_STATUS = 0    
BEGIN    
    
	IF @CumulativeTotal IS NULL
		BEGIN 		    
			SET @CumulativeTotal=@DailyAVGPrice;
			INSERT INTO DailyStockAveragePrice
			VALUES (@SKUID,@Trandate,@DailyAVGPrice,@CumulativeTotal);
			SET @PREVSKUID=@SKUID;
		END
	ELSE
		BEGIN 
			SET @CumulativeTotal=(@CumulativeTotal+@DailyAVGPrice)/2;
			INSERT INTO DailyStockAveragePrice
			VALUES (@SKUID,@Trandate,@DailyAVGPrice,@CumulativeTotal);
			SET @PREVSKUID=@SKUID;
		END

    FETCH NEXT FROM stockTran_cursor     
    INTO @SKUID,@Trandate,@DailyAVGPrice   
    
	IF @PREVSKUID>0 
	BEGIN  
	 IF @SKUID<>@PREVSKUID
	    BEGIN  
			SET @CumulativeTotal=NULL;
		END
	END

END     
CLOSE stockTran_cursor;    
DEALLOCATE stockTran_cursor;

SET @FinalCumulativeTotal= ISNULL((Select top 1 DayEndAVGPrice from DailyStockAveragePrice
WHERE SKUID=@FORSKUID
ORDER BY Trandate DESC),0);

UPDATE SKUs SET AverageCost=@FinalCumulativeTotal WHERE SKUID=@FORSKUID;
UPDATE SKUStock SET AverageCost=@FinalCumulativeTotal WHERE SKUID=@FORSKUID;
UPDATE SKUBatchStock SET AverageCost=@FinalCumulativeTotal WHERE SKUID=@FORSKUID;
UPDATE SKUBatchStockSerial SET LastStockTransactionRateInBDT=@FinalCumulativeTotal WHERE SKUID=@FORSKUID;

------------------------------------------------------------------------------------------------------------------------------
   /*  foreach (var itm in item.Items)
                    {
                        SqlParameter[] p = new SqlParameter[2];
                        p[0] = SqlHelperExtension.CreateInParam("@FORSKUID", SqlDbType.VarChar, itm.SKUID);
                        p[1] = SqlHelperExtension.CreateInParam("@FORTranDate", SqlDbType.Date, item.TransactionDate);
                        var procName = "[dbo].[UpdateDailyStockAveragePrice]";
                        tc.ExecuteNonQuery(CommandType.StoredProcedure, procName, p);
                    } */
------------------------------------------------------------------------------------------------------------------------------                    
--------------------------------------------Procedure to Daily Update stock Avg Price------------------------------------------------

--------------------------------------------Update Daily Transaction Wise Avg Price--------------------------------------------
DECLARE @tableAVG TABLE
(SKUID INT ,
Trandate DATE,
DailyAVGPrice Decimal(18,4),
CumulativeAVGPrice Decimal(18,4))

SET NOCOUNT ON;    
DECLARE @PREVSKUID int;   
DECLARE @SKUID int;    
DECLARE @Trandate DATE;
DECLARE @DailyAVGPrice Decimal(18,4);
DECLARE @CumulativeTotal Decimal(18,4);

SET @CumulativeTotal=NULL;  
SET @PREVSKUID=NULL;  

DECLARE stockTran_cursor CURSOR FOR     
Select SKUID,Trandate, 
  DailyAVGPrice=SUM(TranValue)/ (CASE WHEN SUM(Quantity)>0 THEN  SUM(Quantity) ELSE 1 END)
FROM
(Select SKUID,Trandate=CAST(Trandate AS DATE),Quantity=ISNULL(Quantity,0),RateInBDT,TranValue=ISNULL(Quantity,0)*ISNULL(RateInBDT,0) 
FROM StockTranItems Where TransactionTypeID IN (1,19,23)--(1,19,23) 
AND TranSide=1 
AND SKUID=68069
--AND CAST(Trandate AS DATE)=CAST('2014-11-03' AS DATE)
) T
Group by SKUID,Trandate
ORDER BY SKUID,Trandate;   
  
OPEN stockTran_cursor    
  
FETCH NEXT FROM stockTran_cursor     
INTO @SKUID,@Trandate,@DailyAVGPrice   


IF @PREVSKUID>0 
	BEGIN  
	 IF @SKUID<>@PREVSKUID
	    BEGIN  
			SET @CumulativeTotal=NULL;
		END
	END

  
WHILE @@FETCH_STATUS = 0    
BEGIN    
    
	IF @CumulativeTotal IS NULL
		BEGIN 		    
			SET @CumulativeTotal=@DailyAVGPrice;
			INSERT INTO @tableAVG(SKUID, Trandate,DailyAVGPrice,CumulativeAVGPrice)
			VALUES (@SKUID,@Trandate,@DailyAVGPrice,@CumulativeTotal);
			
			SET @PREVSKUID=@SKUID;
		END
	ELSE
		BEGIN 
			SET @CumulativeTotal=(@CumulativeTotal+@DailyAVGPrice)/2;
			INSERT INTO @tableAVG(SKUID, Trandate,DailyAVGPrice,CumulativeAVGPrice)
			VALUES (@SKUID,@Trandate,@DailyAVGPrice,@CumulativeTotal);

			SET @PREVSKUID=@SKUID;
		END

    FETCH NEXT FROM stockTran_cursor     
    INTO @SKUID,@Trandate,@DailyAVGPrice   
    
	IF @PREVSKUID>0 
	BEGIN  
	 IF @SKUID<>@PREVSKUID
	    BEGIN  
			SET @CumulativeTotal=NULL;
		END
	END

END     
CLOSE stockTran_cursor;    
DEALLOCATE stockTran_cursor;

Select * FROM @tableAVG 
WHERE SKUID=68069
ORDER BY SKUID,Trandate;
--------------------------------------------Update Daily Transaction Wise Avg Price--------------------------------------------


