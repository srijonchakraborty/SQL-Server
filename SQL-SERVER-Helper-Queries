---------T-SQL to identify the Top 30 costly queries in terms of Total CPU---------------
SELECT TOP 30
    qs.sql_handle,
    ExecutionCount=qs.execution_count,
    qs.total_worker_time AS Total_CPU,
    total_CPU_inSeconds = --Converted from microseconds
    qs.total_worker_time/1000000,
    average_CPU_inSeconds = --Converted from microseconds
    (qs.total_worker_time/1000000) / qs.execution_count,
    qs.total_elapsed_time,
    total_elapsed_time_inSeconds = --Converted from microseconds
    qs.total_elapsed_time/1000000,
    st.text,
    qp.query_plan
FROM
    sys.dm_exec_query_stats AS qs
        CROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS st
        CROSS apply sys.dm_exec_query_plan (qs.plan_handle) AS qp
ORDER BY qs.total_worker_time DESC


----------------------- Currently Executing Queries in SQL SERVER ----------------------- 
SELECT sqltext.TEXT,
req.session_id,
req.status,
req.command,
req.cpu_time,
req.total_elapsed_time
FROM sys.dm_exec_requests req
CROSS APPLY sys.dm_exec_sql_text(sql_handle) AS sqltext


-----------------------SQL SERVER â€“ How to See Active SQL Server Connections For Database-----------------------

SELECT DB_NAME(dbid) AS DBName,
COUNT(dbid) AS NumberOfConnections,
loginame
FROM    sys.sysprocesses
GROUP BY dbid, loginame
ORDER BY DB_NAME(dbid);

-----------------------Script to kill all connections to a database (More than RESTRICTED_USER ROLLBACK)-----------------------

USE master;

DECLARE @kill varchar(8000); SET @kill = '';  
SELECT @kill = @kill + 'kill ' + CONVERT(varchar(5), spid) + ';'  
FROM master..sysprocesses  
WHERE dbid = db_id('MyDB')

EXEC(@kill); 


REFERENCE LINK: https://www.dbrnd.com/2016/04/sql-server-8-different-ways-to-detect-a-deadlock-in-a-database/#prettyPhoto
-----------------------Using SP_LOCK, you can find the WAIT status for blocking sessions-----------------------
 	EXEC SP_LOCK;
	
-----------------------Using sys.sysprocesses----------------------- 	
  SELECT * FROM sys.sysprocesses 
  WHERE blocked > 0;
  
-----------------------Using common DMV-----------------------
	SELECT 	
		der.blocking_session_id AS BlockingSessionID
		,dest.text AS BlockingStatement
	FROM sys.dm_exec_connections AS sdec
	INNER JOIN sys.dm_exec_requests AS der
	    ON sdec.session_id = der.blocking_session_id
	INNER JOIN sys.dm_os_waiting_tasks AS dowt
	    ON der.session_id = dowt.session_id
	CROSS APPLY sys.dm_exec_sql_text(sdec.most_recent_sql_handle) AS dest;
	
	
-----------------------Using sys.dm_tran_locks------------------------
	SELECT 
		request_session_id AS SPID 
		,DB_NAME(resource_database_id) AS DatabaseName
		,resource_type AS LockedResource
		,request_mode AS LockType
	FROM sys.dm_tran_locks 	
	
-----------------------Count total number of DeadLock:-----------------------
    SELECT *,cntr_value AS TotalNumberOfDeadLocks
	FROM sys.dm_os_performance_counters
	WHERE counter_name = 'Number of Deadlocks/sec'
	   AND instance_name = '_Total'	
	   
